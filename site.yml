- name: Create filesystem
  hosts: infra
  tags: volumes
  tasks:
    - filesystem:
        fstype: ext4
        #force: yes
        dev: /dev/xvdb

    - name: Mount up device
      mount:
        path: /openstack
        src: /dev/xvdb
        fstype: ext4
        state: mounted

    #- name: Create LXC dir for bind mount
    #  file:
    #    path: /openstack/lxc
    #    state: directory
    #    mode: 0755

    #- name: Mount bind
    #  mount:
    #    path: /var/lib/lxc
    #    src: /openstack/lxc
    #    fstype: none
    #    opts: bind
    #    state: mounted

- name: Set VXLAN interface
  hosts: cloudinfra
  vars:
    vxlan_inteface_name: vxlan100
    vxlan_interface_id: 100
    vxlan_interface_dstport: 4789
    vxlan_interface_mtu: 1450
  tags:
    - vxlan
  tasks:
  - debug: var=item
    with_items: "{{ groups['cloudinfra'] | difference([inventory_hostname]) }}"

  - name: Create VXLAN device
    shell: |
       ip link add "{{vxlan_inteface_name}}" type vxlan id "{{vxlan_interface_id}}" dstport "{{vxlan_interface_dstport}}" local "{{hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address']}}" nolearning
       ip link set dev "{{vxlan_inteface_name}}" mtu "{{vxlan_interface_mtu}}"

  - name: Add neighbours to VXLAN
    shell: |
       bridge fdb append 00:00:00:00:00:00 dev "{{vxlan_inteface_name}}" dst "{{hostvars[item]['ansible_eth1']['ipv4']['address']}}"
       bridge fdb append "{{hostvars[item]['ansible_eth1']['macaddress']}}" dev "{{vxlan_inteface_name}}" dst "{{hostvars[item]['ansible_eth1']['ipv4']['address']}}"
    with_items: "{{ groups['cloudinfra'] | difference([inventory_hostname]) }}"

  - name: Online intefaces
    shell: |
       ip link set  dev "{{vxlan_inteface_name}}" up

- name: Install Ansible prerequisites
  hosts: cloudinfra
  gather_facts: false
  user: root
  roles:
    - rpc_networking
  tags:
    - network
    - vxlan
  tasks:
    - name: Include network config
      lineinfile:
        path: /etc/network/interfaces
        state: present
        line: "source /etc/network/interfaces.d/*.cfg"
        regexp: "^source.*"

    - name: restart networking
      service:
        name: networking
        state: restarted

- name: Setup infra1
  hosts: infra1
  tasks:
    - name: Get Openstack ansible from git
      git:
        repo: https://github.com/openstack/openstack-ansible.git
        dest: /opt/openstack-ansible
        version: "{{ openstack_ansible_version }}"

    - name: Boostrap ansible
      shell: |
        ./scripts/bootstrap-ansible.sh
      args:
        chdir: /opt/openstack-ansible
        creates: /etc/openstack_deploy

#    - name: Configure OSA logging in ansible.cfg
#      ini_file:
#        dest: /opt/openstack-ansible/playbooks/ansible.cfg
#        section: defaults
#        option: log_path
#        value: /root/deploy_ansible.log
#        backup: yes
#        state: present
#      tags: ansible_log

    - name: Get SSH pub file
      slurp:
        src: ~/.ssh/id_rsa.pub
      register: ssh_pub


- name: SSH keys
  hosts: cloudinfra
  tasks:

    - name: Set authorized key for user root  copying it from ssh_pub var
      authorized_key:
        user: root
        state: present
        key: "{{ hostvars.infra1.ssh_pub.content  | b64decode  }}"


- name: Set L2 interface for flat network on compute node
  hosts: compute
  tasks:
    - shell: |
        ip link add br-vlan-veth type veth peer name flat-nic
        ip link set br-vlan-veth up
        ip link set flat-nic  up
        brctl addif br-vlan br-vlan-veth

- name: Configure swap on infra nodes
  hosts: infra
  gather_facts: false
  vars:
    swapfile_location: /openstack/swapfile
    swapfile_size: 16384MB
  user: root
  roles:
    - kamaln7.swapfile

- name: Configure swap on compute ans storage
  hosts: compute,storage
  gather_facts: false
  vars:
    swapfile_size: 4096MB
  user: root
  roles:
    - kamaln7.swapfile

- name: Install NFS server 
  hosts: storage
  vars:
    nfs_exports: 
      - "/images *(rw,sync,no_root_squash)" 
      - "/volumes *(rw,sync,no_root_squash)"
  roles:
    - { role: geerlingguy.nfs }

  tasks:
    - name: Fix persmissions to glance uid gid
      file:
        path: /images
        group: 999
        owner: 999

    - name: Fix persmissions to cinder uid gid
      file:
        path: /volumes
        group: 998
        owner: 998

 
- name: Openstack Setup hosts
  hosts: infra1
  tasks:
    - name: Copy Openstack ansible config to infra1
      copy:
        src: etc/openstack_deploy/{{ item }}
        dest: /etc/openstack_deploy/
      with_items:
        - openstack_user_config.yml
        - user_variables.yml 

    - name: Copy user_secrets.yml
      shell: |
        cp  /opt/openstack-ansible/etc/openstack_deploy/user_secrets.yml /etc/openstack_deploy/
      args:
        creates: /etc/openstack_deploy/user_secrets.yml

    - name: Generate secrets
      shell: |
        ./scripts/pw-token-gen.py --file /etc/openstack_deploy/user_secrets.yml
      args:
        creates: /etc/openstack_deploy/user_secrets.yml.tar
        chdir: /opt/openstack-ansible 

    - name: Setup hosts playbook run
      shell: |
        openstack-ansible setup-hosts.yml --skip-tags security
      args:
        chdir: /opt/openstack-ansible/playbooks

    - name: Setup infrastructure playbook run
      shell: |
        openstack-ansible setup-infrastructure.yml
      args:
        chdir: /opt/openstack-ansible/playbooks

    - name: Setup openstack playbook run
      shell: |
        openstack-ansible setup-openstack.yml
      args:
        chdir: /opt/openstack-ansible/playbooks

- name: Openstack Setup hosts
  hosts: infra1
  tags:
    - firewall
  tasks:
    - name: Add rule for horizon
      iptables:
        chain: FORWARD
        out_interface: br-vip
        in_interface: eth0
        destination_port: 443
        protocol: tcp
        ctstate: NEW
        jump: ACCEPT

    - name: Add rule for horizon
      iptables:
        chain: FORWARD
        out_interface: br-vip
        in_interface: eth0
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT

    - name: Add rule for horizon
      iptables:
        table: nat
        chain: PREROUTING
        in_interface: eth0
        destination_port: 443
        protocol: tcp
        to_destination: 172.29.232.55
        jump: DNAT
