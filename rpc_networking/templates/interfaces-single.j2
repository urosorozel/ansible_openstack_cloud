# VLAN Physical Interface
auto {{ rpc_networking.vlan.interface }}
iface {{ rpc_networking.vlan.interface }} inet manual
{% if rpc_networking.vlan.mtu is defined %}
mtu {{ rpc_networking.vlan.mtu }}
{% endif %}

{% if rpc_networking.vip is defined %}
# VIP VLAN Tagged Interface
auto {{ rpc_networking.vip.interface }}.{{ rpc_networking.vip.vlan }}
iface {{ rpc_networking.vip.interface }}.{{ rpc_networking.vip.vlan }} inet manual
vlan-raw-device {{ rpc_networking.vlan.interface }}
{% if rpc_networking.vip.mtu is defined %}
mtu {{ rpc_networking.vip.mtu }}
{% endif %}
{% endif %}

# Container VLAN Tagged Interface
auto {{ rpc_networking.mgmt.interface }}.{{ rpc_networking.mgmt.vlan }}
iface {{ rpc_networking.mgmt.interface }}.{{ rpc_networking.mgmt.vlan }} inet manual
vlan-raw-device {{ rpc_networking.vlan.interface }}
{% if rpc_networking.mgmt.mtu is defined %}
mtu {{ rpc_networking.mgmt.mtu }}
{% endif %}

# Storage VLAN Tagged Interface
auto {{ rpc_networking.storage.interface }}.{{ rpc_networking.storage.vlan }}
iface {{ rpc_networking.storage.interface }}.{{ rpc_networking.storage.vlan }} inet manual
vlan-raw-device {{ rpc_networking.vlan.interface }}
{% if rpc_networking.storage.mtu is defined %}
mtu {{ rpc_networking.storage.mtu }}
{% endif %}

# VXLAN VLAN Tagged Interface
auto {{ rpc_networking.vxlan.interface }}.{{ rpc_networking.vxlan.vlan }}
iface {{ rpc_networking.vxlan.interface }}.{{ rpc_networking.vxlan.vlan }} inet manual
vlan-raw-device {{ rpc_networking.vlan.interface }}
{% if rpc_networking.vxlan.mtu is defined %}
mtu {{ rpc_networking.vxlan.mtu }}
{% endif %}

# Swift Replication VLAN Tagged Interface
auto {{ rpc_networking.swift.interface }}.{{ rpc_networking.swift.vlan }}
iface {{ rpc_networking.swift.interface }}.{{ rpc_networking.swift.vlan }} inet manual
vlan-raw-device {{ rpc_networking.vlan.interface }}
{% if rpc_networking.swift.mtu is defined %}
mtu {{ rpc_networking.swift.mtu }}
{% endif %}

{% if rpc_networking.vip is defined %}
# VIP Bridge
auto br-vip
iface br-vip inet static
address {{ rpc_networking.vip.address }}
netmask {{ rpc_networking.vip.netmask }}
{% if rpc_networking.vip.mtu is defined %}
mtu {{ rpc_networking.vip.mtu }}
{% endif %}
bridge_ports {{ rpc_networking.vip.interface }}.{{ rpc_networking.vip.vlan }}
bridge_stp off
bridge_waitport 0
bridge_fd 0
{% endif %}

# Container Bridge
auto br-mgmt
iface br-mgmt inet static
address {{ rpc_networking.mgmt.address }}
netmask {{ rpc_networking.mgmt.netmask }}
{% if rpc_networking.mgmt.mtu is defined %}
mtu {{ rpc_networking.mgmt.mtu }}
{% endif %}
bridge_ports {{ rpc_networking.mgmt.interface }}.{{ rpc_networking.mgmt.vlan }}
bridge_stp off
bridge_waitport 0
bridge_fd 0

# Storage Bridge
auto br-storage
iface br-storage inet static
address {{ rpc_networking.storage.address }}
netmask {{ rpc_networking.storage.netmask }}
{% if rpc_networking.storage.mtu is defined %}
mtu {{ rpc_networking.storage.mtu }}
{% endif %}
bridge_ports {{ rpc_networking.storage.interface }}.{{ rpc_networking.storage.vlan }}
bridge_stp off
bridge_waitport 0
bridge_fd 0

# VLAN Bridge
auto br-vlan
iface br-vlan inet manual
{% if rpc_networking.vlan.mtu is defined %}
mtu {{ rpc_networking.vlan.mtu }}
{% endif %}
bridge_ports {{ rpc_networking.vlan.interface }}
bridge_stp off
bridge_waitport 0
bridge_fd 0

# VXLAN Bridge
auto br-vxlan
iface br-vxlan inet static
address {{ rpc_networking.vxlan.address }}
netmask {{ rpc_networking.vxlan.netmask }}
{% if rpc_networking.vxlan.mtu is defined %}
mtu {{ rpc_networking.vxlan.mtu }}
{% endif %}
bridge_ports {{ rpc_networking.vxlan.interface }}.{{ rpc_networking.vxlan.vlan }}
bridge_stp off
bridge_waitport 0
bridge_fd 0

# Swift Replication Bridge
auto br-swift
iface br-swift inet static
address {{ rpc_networking.swift.address }}
netmask {{ rpc_networking.swift.netmask }}
{% if rpc_networking.swift.mtu is defined %}
mtu {{ rpc_networking.swift.mtu }}
{% endif %}
bridge_ports {{ rpc_networking.swift.interface }}.{{ rpc_networking.swift.vlan }}
bridge_stp off
bridge_waitport 0
bridge_fd 0

source /etc/network/interfaces.d/*.cfg
